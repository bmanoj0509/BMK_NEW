- hosts: 127.0.0.1
  tasks:
    - ec2_instance:
            region: "ap-southeast-1"
            image_id: "ami-0f86a70488991335e"
            instance_type: "t2.micro"
            vpc_subnet_id: "subnet-e1e23387"
            security_group: "sg-0f5e21283260db0ff"
            key_name: "commonkey_allinstances"
            name: "HAProxy_ser"
            state: present
            aws_access_key: "AKIAWUE76LOJTA5YYDPG"
            aws_secret_key: "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"
      register: x
    - name: Dynamically adding haproxy hosts
      lineinfile:
                 path: "/root/ip.text"
                 insertafter: '^\[haproxy\]'
                 state: present
                 line: "{{  x.instances[0].public_ip_address }} ansible_user=ec2-user ansible_ssh_private_key_file=/root/commonkey_allinstances.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no'"

    - ec2_instance:
            region: "ap-southeast-1"
            image_id: "ami-0f86a70488991335e"
            instance_type: "t2.micro"
            vpc_subnet_id: "subnet-e1e23387"
            security_group: "sg-0f5e21283260db0ff"
            key_name: "commonkey_allinstances"
            name: "HTTPD_ser"
            state: present
            aws_access_key: "AKIAWUE76LOJTA5YYDPG"
            aws_secret_key: "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"
      register: y
    - name: Dynamically adding webserver hosts
      lineinfile:
                 path: "/root/ip.text"
                 insertafter: '^\[httpd\]'
                 state: present
                 line: "{{  y.instances[0].public_ip_address }} ansible_user=ec2-user ansible_ssh_private_key_file=/root/commonkey_allinstances.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no'"
    - name: "wait for 2 minutes"
      pause:
            minutes: 2
- hosts: httpd
  tasks:
    - name: "Install httpd software in httpd host group"
      package:
            name: "httpd"
    - name: "Copying html content"
      copy:
            dest: "/var/www/html/index.html"
            content: "FOR LB TESTING"
    - name: "Restart httpd services"
      service:
            name: "httpd"
            state: restarted
- hosts: haproxy
  tasks:
    - name: "Install LB software"
      package:
            name: "haproxy"
    - name: "Copying haproxy.cfg file"
      template:
            dest: "/etc/haproxy/haproxy.cfg"
            src: "haproxy.cfg"
    - name: "restart haproxy service"
      service:
            name: "haproxy"
            state: restarted


